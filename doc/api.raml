#%RAML 1.0

title: Friedbert JSON API
baseUri: https://www.zeit.de/api
version: v1
mediaType: [application/json, application/javascript]
protocols:
  - http
traits:
  paged:
    description: Page through a collection of items
    queryParameters:
      size?:
        description: Limit the result size
        type: integer
        minimum: 1
        maximum: 1000
        default: 100
      offset?:
        description: Offset for pagination
        type: integer
        minimum: 0
        default: 0
types:
  Ressort:
    properties:
      name: string
      title: string
      unique_id: string
      sub_ressorts?: Ressort[]
  Article:
    properties:
      uuid: string
      unique_id: string
      url: string
      supertitle: string
      title: string
      teaser_text: string
      ressort: Ressort
      sub_ressort: Ressort
      date_first_released: datetime
      date_last_published_semantic: datetime
      keywords: string[]
      lead_article: boolean

/article:
  get:
    is: [paged]
    responses:
      200:
        body: Article[]

/article/{uuid}:
  get:
    responses:
      200:
        body: Article

/comment-count{?unique_id}:
  get:
    description: >
      Endpoint to retrieve a map of article uniqueIds to human readable comment
      counts, for all commentable articles placed on a given centerpage.
    queryParameters:
      unique_id:
        description: UniqueId of centerpage
        type: string
    responses:
      200:
        body:
          properties:
            comment_count:
              properties:
                //: string # Article uniqueId -> comment count
          example:
            comment_count:
              "http://xml.zeit.de/ausland/trump": "523 Kommentare"
              "http://xml.zeit.de/musik/country": "Keine Kommentare"
      412:
        description: Missing value for parameters

/delta-time{?date}:
  get:
    description: >
      Endpoint to generate a human readable time delta from date to basedate
    queryParameters:
        date:
          description: Past date for delta calculation
          type: datetime
        base_date?:
          description: Base date for delta calculation, defaults to now
          type: datetime
    responses:
      200:
        body:
          properties:
            delta_time:
              properties:
                time: string
          example:
            delta_time:
              time: "vor 1 Stunde"
      412:
        description: Missing or bad arguments

/delta-time{?unique_id}:
  get:
    description: >
      Endpoint to which you supply a centerpage uniqueId and get a map of
      uniqueIds of articles (that are currently placed on that CP) to human
      readable time deltas expressing how long ago the last modification to each
      article was made.
    queryParameters:
      unique_id:
        description: UniqueId of centerpage
        type: string
      base_date?:
        description: Base date for delta calculation, defaults to now
        type: datetime
    responses:
      200:
        body:
          properties:
            delta_time:
              properties:
                //: string # Article uniqueId -> time delta
          example:
            delta_time:
              "http://xml.zeit.de/politik/merkel-g20": "Vor 2 Stunden"
              "http://xml.zeit.de/wissen/photosynthese": "Vor 1 Stunde"
      400:
        description: Invalid resource

/ressort:
  get:
    is: [paged]
    responses:
      200:
        body: Ressort[]

  /ressort/{name}:
    get:
      is: [paged]
      responses:
        200:
          body: Ressort

/update-time/{+path}:
  get:
    description: >
      Endpoint that expects the unique path segment of a centerpage and
      responds with the dates that centerpage was last published.
    queryParameters:
      callback?:
        description: Optionally supply a name for JSONP callback function
        type: string
        minLength: 3
    responses:
      200:
        body:
          properties:
            last_published_semantic: datetime
            last_published: datetime
      400:
        description: Invalid JSONP callback function name
