$fix-mqs: false !default;
$fix-mqs-h: false !default;

// sanity-checks
@if $fix-mqs and unit($fix-mqs) != "em" {
	@error "Please provide variable $fix-mqs using 'em' unit";
}

@if $fix-mqs-h and unit($fix-mqs-h) != "em" {
	@error "Please provide variable $fix-mqs using 'em' unit";
}

@mixin respond-min($width) {
	@if $fix-mqs {
		// most MQs are in <em>, but some MQs might use <px>
		// convert to <em> to avoid conparison of incompatible units
		@if $fix-mqs >= em($width) {
			@content;
		}
	}
	@else {
		@media screen and (min-width: $width) {
			@content;
		}
	}
}

@mixin respond-min-h($height) {
	@if $fix-mqs-h {
		@if $fix-mqs-h >= em($height) {
			@content;
		}
	}
	@else {
		@media screen and (min-height: $height) {
			@content;
		}
	}
}

@mixin respond-minw-minh($width, $height) {
	@if $fix-mqs {
		@if $fix-mqs >= em($width) {
			@content;
		}
	}
	@else {
		@media screen and (min-width: $width) and (min-height: $height) {
			@content;
		}
	}
}

@mixin respond-max($width) {
	@if $fix-mqs {
		@if $fix-mqs < em($width) {
			@content;
		}
	}
	@else {
		$rounded-width: $width - .001em;
		@media screen and (max-width: $rounded-width) {
			@content;
		}
	}
}

@mixin respond-min-max($min-width, $max-width) {
	@if $fix-mqs {
		@if $fix-mqs >= em($min-width) or $fix-mqs < em($max-width) {
			@content;
		}
	} @else {
		@media screen and (min-width: $min-width) and (max-width: $max-width) {
			@content;
		}
	}
}

$old-ie: false !default;

@mixin old-ie {
	@if $old-ie {
		@content;
	}
}
