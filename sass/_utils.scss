$fix-mqs: false !default;
$fix-mqs-h: false !default;

// sanity-checks
@if $fix-mqs and unit($fix-mqs) != "em" {
	@error "Please provide variable $fix-mqs using 'em' unit";
}

@if $fix-mqs-h and unit($fix-mqs-h) != "em" {
	@error "Please provide variable $fix-mqs using 'em' unit";
}

@mixin respond-min($width) {
	@if $fix-mqs {
		// most MQs are in <em>, but some MQs might use <px>
		// convert to <em> to avoid conparison of incompatible units
		@if $fix-mqs >= em($width) {
			@content;
		}
	}
	@else {
		@media screen and (min-width: $width) {
			@content;
		}
	}
}

@mixin respond-min-h($height) {
	@if $fix-mqs-h {
		@if $fix-mqs-h >= em($height) {
			@content;
		}
	}
	@else {
		@media screen and (min-height: $height) {
			@content;
		}
	}
}

@mixin respond-minw-minh($width, $height) {
	@if $fix-mqs {
		@if $fix-mqs >= em($width) and $fix-mqs-h >= em($height) {
			@content;
		}
	}
	@else {
		@media screen and (min-width: $width) and (min-height: $height) {
			@content;
		}
	}
}

@mixin respond-max($width, $exclusive: true) {
	@if $exclusive {
		$width: $width - 0.001;
	}

	@if $fix-mqs {
		@if $fix-mqs <= em($width) {
			@content;
		}
	}
	@else {
		@media screen and (max-width: $width) {
			@content;
		}
	}
}

@mixin respond-min-max($min-width, $max-width) {
	@if $fix-mqs {
		@if $fix-mqs >= em($min-width) and $fix-mqs <= em($max-width) {
			@content;
		}
	} @else {
		@media screen and (min-width: $min-width) and (max-width: $max-width) {
			@content;
		}
	}
}

@mixin respond-min-resolution($resolution) {
	@if not $fix-mqs {
		@media
			only screen and (-webkit-min-device-pixel-ratio: $resolution),
			only screen and (        min-device-pixel-ratio: $resolution),
			only screen and (                min-resolution: 96dpi * $resolution),
			only screen and (                min-resolution: 1dppx * $resolution) {
				@content;
		}
	}
}

$old-ie: false !default;

@mixin old-ie {
	@if $old-ie {
		@content;
	}
}
