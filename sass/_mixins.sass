=link
	&:link,
	&:visited
		@content

=on-interaction
	&:hover,
	&:active,
	&:focus
		@content

=default-article-textlink
	a
		border-bottom: 1px solid rgba($color-link--default, .5)
		+transition-property(border-bottom-color, color)
		+transition-duration(.2s)

		&:focus
			border-bottom-color: rgba($color-link--focus, .5)

		&:hover
			border-bottom-color: rgba($color-link--hover, .5)

		&:active
			border-bottom-color: rgba($color-link--active, .5)

=fake-box-shadow-inset($color: $black, $alpha_start: 0.7, $alpha_stop: 0.0, $direction: to top, $length: 60%)
	background-color: $color
	position: relative
	&:after
		bottom: 0
		content: ''
		height: 100%
		left: 0
		position: absolute
		right: 0
		top: 0
		width: 100%
		z-index: 1
		+background-image(linear-gradient($direction, rgba($color, $alpha_start) 0%, rgba($color, $alpha_stop) $length))

=teaser-image-dark-overlay($color: rgb(0, 15, 20), $angle: 12deg, $gradient: 0)
	@if $gradient == 0
		$gradient: rgba($color, 0.6) 15%, rgba($color, 0.15) 52%, rgba($color, 0) 70%
	background-color: $color
	position: relative
	&:after
		bottom: 0
		content: ''
		height: 100%
		left: 0
		position: absolute
		right: 0
		top: 0
		width: 100%
		+background-image(linear-gradient($angle, $gradient))

=teaser-image-text-shadow
	text-shadow: 0 0 10px rgba(0, 0, 0, .5)

=fake-box-dimming($color: $black, $perc: 0.5)
	&:after
		content: ''
		position: absolute
		z-index: 1
		height: 100%
		width: 100%
		left: 0px
		top: 0px
		+background(none repeat scroll 0 0 / 100% auto rgba($color, $perc))

=no-user-select
	-webkit-touch-callout: none
	-webkit-user-select: none
	-khtml-user-select: none
	-moz-user-select: none
	-ms-user-select: none
	user-select: none

// if you change this, please change =unpadded accordingly
=padded
	padding-left: $page-padding--small
	padding-right: $page-padding--small
	+respond-min($break-1)
		padding-left: $page-padding
		padding-right: $page-padding

// should be =padded inverted
=unpadded
	margin-left: -$page-padding--small
	margin-right: -$page-padding--small
	+respond-min($break-1)
		margin-left: -$page-padding
		margin-right: -$page-padding

=bleed($max: $medium-content-width + 2*$gutter)
	margin-left: -$page-padding--small
	margin-right: -$page-padding--small
	+respond-min($break-1)
		margin-left: -$page-padding
		margin-right: -$page-padding
	+respond-min($max)
		margin-left: 0
		margin-right: 0

=visuallyhidden
	border: 0
	clip: rect(0 0 0 0)
	height: 1px
	margin: -1px
	overflow: hidden
	padding: 0
	position: absolute
	width: 1px

=ir
	display: block
	overflow: hidden
	white-space: nowrap
	text-indent: 150%

=unset-media($switch: false)
	.media__aside
		float: none
		margin-bottom: $gutter-media
		@if $switch
			margin-left: 0
		@else
			margin-right: 0

=body-type-zoom
	font-size: $font-ml
	+respond-min($break-3)
		font-size: $font-l

=input-placeholder
	::-webkit-input-placeholder
		@content
	::-moz-placeholder
		@content
	::input-placeholder
		@content

=justify-children-horizontally($elements-selector, $vertical-alignment: top)
	text-align: justify
	text-justify: distribute-all-lines
	-ms-text-justify: distribute-all-lines

	// this :after is sort-of a hack to justify the elements selected by $elements-selector
	// > short explanation:
	//   the elements get 'inline-block'-ed and can therefore be justified via 'justify'.
	//   but: justification happens for every *line* except the last one, which is left-aligned.
	//   hence the need to have an additional line, which is provided by :after.
	//   it takes up a whole line (width: 100%) and is invisible due to it's font-size and line-height of 0
	// source: http://stackoverflow.com/questions/6865194/fluid-width-with-equally-spaced-divs
	&:after
		+inline-block
		content: ''
		font-size: 0
		line-height: 0
		width: 100%

	& > *
		text-align: left // reset text-aling for child-elements

	@at-root #{$elements-selector}
		+inline-block($vertical-alignment)

=animated-interaction($color: $color-link--hover)
	+transition(border-color .2s)
	border-bottom: 1px solid transparent
	border-bottom: 1px solid rgba($color, 0)
	+on-interaction
		color: $color
		border-color: $color

=tiemann
	font-family: "TiemannLight", $serif-fallbacks

=drop_icon()
	display: inline-block // needed for "rotate on hover"
	margin-left: $tiny
	content: "\25BE" // â–¾ = black down-pointing small triangle

/* mixins for navigation/header */

=add_nav_bar_style($height,$double: false)
	border-bottom: 1px solid $zon_light_grey
	height: $height
	padding-left: $fine
	width: 100%
	@if $double
		border-top: 1px solid $zon_light_grey

=remove_nav_bar_style($width: auto)
	border: 0
	height: auto
	padding-left: 0
	width: $width

=hover_nav_icon($display:block,$bgcolor:#FFF, $padding:$small)
	.main_nav__icon--hover
		display: none
	a
		display: $display
		padding: $padding
		&:hover
			.main_nav__icon--hover
				display: $display
				background-color: $bgcolor
			.main_nav__icon--plain
				display: none

/* END: mixins for navigation/header */

=image_text_replacement($display:block, $vertical-align:middle)
	+background-size(contain)
	background-position: 50% 50%
	display: $display
	text-indent: -50000em
	@if $display == inline-block or $display == inline
		vertical-align: $vertical-align

=zon-button($background-color, $hover-background-color, $border-color, $hover-border-color, $color, $hover-color, $visited-color, $font-size: remify(13px), $margin: remify(14px 6px), $padding: remify(10px 18px))
	+inline-block(none)
	background-color: $background-color
	border-radius: 5px
	border: 2px solid $border-color
	color: $color
	font-size: $font-size
	font-weight: bold
	letter-spacing: $zon-letter-spacing-m
	margin: $margin
	padding: $padding
	text-align: center
	text-transform: uppercase
	+transition(all .15s ease-in-out)
	&:visited
		color: $visited-color
	&:hover,
	&:focus
		background-color: $hover-background-color
		border-color: $hover-border-color
		color: $hover-color
		cursor: pointer
	&[disabled]
		opacity: .5
	&[disabled]:hover,
	&[disabled]:focus
		background-color: $background-color
		border-color: $border-color
		color: $color
		cursor: default

=zon-button-inky
	+zon-button($zon_dark_grey, $zon_charcoal, $zon_dark_grey, $zon_charcoal, $white, $white, $white, $margin: 0, $padding: remify(5px) 1em remify(4px))

=zon-button-dark($background-color: rgba(0,0,0, 0.2), $hover-background-color: rgba(0,0,0, 0.5), $border-color: $zon_mid_grey, $hover-border-color: $zon-alto, $color: $zon_lighter_grey, $hover-color: $white, $visited-color: $zon-alto, $font-size: remify(13px), $margin: remify(14px 6px), $padding: remify(10px 18px))
	+zon-button($background-color, $hover-background-color, $border-color, $hover-border-color, $color, $hover-color, $visited-color, $font-size, $margin, $padding)

=zon-button-light
	+zon-button(rgba(255,255,255, 0.5), rgba(255,255,255, 0.8), $zon_light_grey, $zon_mid_grey, $zon-charcoal, $black, $zon-charcoal, $margin: 0)

/// mac font smoothing switching
/// please use extremely carefully http://usabilitypost.com/2012/11/05/stop-fixing-font-smoothing/
/// rather use case may be **light text on dark background**
/// switching off fontsmoothing is prohibited except on high density mobile safari screens (see media query)
/// @param {bool} $antialiased [true] - switch on antialiasing
=font-smoothing($antialiased: true)
	@if $antialiased
		-webkit-font-smoothing: antialiased
		-moz-osx-font-smoothing: grayscale
		text-rendering: optimizeLegibility
	@else
		@media only screen and (-webkit-min-device-pixel-ratio: 1.25), only screen and ( min-device-pixel-ratio: 1.25), only screen and ( min-resolution: 200dpi), only screen and ( min-resolution: 1.25dppx)
			-webkit-font-smoothing: subpixel-antialiased
			-moz-osx-font-smoothing: auto

/// animating elements *on hover* over one of it's parents
/// @param {element} $parent  - parent element for hover effect, if not supplied the $element is used
/// @param {map} $trans - transition properties
/// @property {string} $trans.property [opacity] - transition property
/// @property {number} $trans.duration [.5s] - transition duration
/// @property {number} $trans.delay [0] - transition delay
/// @property {string} $trans.timing [ease-in-out] - transition timing function
/// @content css of the animated state
/// @output styles for the element, the parent (@-rooted) and the hover state
=transition-on-parent-hover($parent, $trans: ())
	$element: &
	$default-transition: ("property": opacity, "duration": .5s, "delay": 0, "timing": ease-in-out)
	$transition: map_merge($default-transition, $trans)
	+transition( map-get($transition, "property") map-get($transition, "duration") map-get($transition, "delay") map-get($transition, "timing") )
	@at-root #{$parent}
		&:hover
			#{$element}
				@content

// pseudo classes
%off-screen
	height: 1px
	left: -10000px
	overflow: hidden
	position: absolute
	top: auto
	width: 1px
